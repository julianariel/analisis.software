/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grupo1.gestiontesting;

import com.github.javaparser.ast.body.MethodDeclaration;
import com.github.javaparser.ast.stmt.Statement;
import com.github.javaparser.symbolsolver.resolution.SymbolSolver;
//import com.sun.xml.internal.ws.util.StringUtils;
import java.awt.Image;
import java.awt.Toolkit;

import java.io.File;
import java.io.FilenameFilter;
import java.text.DecimalFormat;
import java.time.Clock;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author julian
 */
public class frmMain extends javax.swing.JFrame {

    private final Parser parser;
    private String FilePath;
    private List<MethodDeclaration> methods;    
    private List<MethodDeclaration> allMethods;
    private HashMap<String, Integer> fadeIn = new HashMap<String, Integer>();;

    //Para evitar que se elija lo mismo 2 veces porque anda lentito.
    private String methodElegido = "";
    private String claseElegida = "";
    private static final Boolean LOG_DEBUG = false;
    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        parser = new Parser();
        /*
        ImageIcon ImageIcon = new ImageIcon(getClass().getResource("../../../../../icon.png"));
        Image Image = ImageIcon.getImage();
        this.setIconImage(Image);
        */
        // First way, using Toolkit
        // The Toolkit class contains a factory method getDefaulToolkit()
        // which returns Toolkit object. This object contains getImage()
        // method which takes the path of the image and returns the
        // java.awt.Image object
        setIconImage(Toolkit.getDefaultToolkit().getImage("icon.png"));        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        listMethods = new javax.swing.JList<String>();
        lblPath = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMethods1 = new javax.swing.JList<String>();
        jScrollPane3 = new javax.swing.JScrollPane();
        c = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        JListClasses = new javax.swing.JList<String>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblCodeLines = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblCodeLinescommenteds = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblCommentPerc = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblComplejidad = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblLongitud = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblVolumen = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblFanOut = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblFanIn = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();

        jFileChooser1.setAccessory(jButton2);
        jFileChooser1.setDialogTitle("Seleccionar carpeta");
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Herramienta de testing");

        listMethods.setName("listMethods"); // NOI18N
        listMethods.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listMethodsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listMethods);

        lblPath.setText("Ruta: <Seleccionar carpeta>");

        jButton2.setText("Buscar ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        listMethods1.setName("listMethods"); // NOI18N
        jScrollPane2.setViewportView(listMethods1);

        c.setColumns(20);
        c.setRows(5);
        jScrollPane3.setViewportView(c);

        jScrollPane4.setViewportView(jTextPane1);

        JListClasses.setName("listMethods"); // NOI18N
        JListClasses.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JListClassesValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(JListClasses);

        jLabel2.setText("Clases");

        jLabel3.setText("Métodos");

        jLabel4.setText("Código");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Cantidad de lineas de código totales");

        lblCodeLines.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCodeLines.setText("...");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Cantidad de lineas de código comentadas");

        lblCodeLinescommenteds.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCodeLinescommenteds.setText("...");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Porcentaje de lineas comentadas");

        lblCommentPerc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCommentPerc.setText("...");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Volumen");

        lblComplejidad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblComplejidad.setText("...");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Complejidad ciclomática");

        lblLongitud.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblLongitud.setText("...");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Longitud");

        lblVolumen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblVolumen.setText("...");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Fan-Out");

        lblFanOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFanOut.setText("...");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Fan-In");

        lblFanIn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFanIn.setText("...");

        jLabel1.setText("((cantidad de lineas comentadas * 100) / cantiad de lineas totales)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2)
                                        .addGap(19, 19, 19))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addComponent(jLabel3))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblVolumen))
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator3)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFanIn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFanOut))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCodeLines))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(lblCodeLinescommenteds))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCommentPerc))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblComplejidad))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblLongitud))
                            .addComponent(jSeparator8)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPath)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPath)
                    .addComponent(jButton2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(lblCodeLines))
                                        .addGap(15, 15, 15)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(lblCodeLinescommenteds))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblCommentPerc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(lblComplejidad))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lblLongitud))
                        .addGap(12, 12, 12)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lblVolumen))
                        .addGap(17, 17, 17)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(lblFanOut))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(lblFanIn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jFileChooser1.setDialogTitle("Elegir carpeta");
        jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        int result = jFileChooser1.showOpenDialog(this);
        
        if(result == JFileChooser.CANCEL_OPTION) {
                FilePath = "";
        } else if(result == JFileChooser.APPROVE_OPTION) {
                FilePath = jFileChooser1.getSelectedFile().getAbsolutePath();
                lblPath.setText("Ruta: " + FilePath);
                
                
                this.log("se cerró el file chooser");
                                
                File directory = new File(FilePath);
                File[] fileArray = directory.listFiles(new FilenameFilter() {
                        @Override
                        public boolean accept(File dir, String name) {
                                return name.endsWith(".java");
                        }
                });
                
                this.log("files leidos");

                List<File> fileList = Arrays.asList(fileArray);
        
                DefaultListModel listModel = new DefaultListModel();
                for(int i=0; i < fileArray.length; i++) {
                        String nombreArchivoJava = fileArray[i].getName();
                        listModel.add(i, nombreArchivoJava);
                }

                JListClasses.setModel(listModel);   
                
                this.log("files agregadeos a la lista"); 
                
                allMethods = new ArrayList<MethodDeclaration>();
                for(int i = 0; i< JListClasses.getModel().getSize();i++){
                    allMethods.addAll(parser.getMethods(FilePath + "\\" +  JListClasses.getModel().getElementAt(i)));
                }
                
                this.log("métodos cargados");
                
                for(MethodDeclaration auxMethod : allMethods){    
                    if(auxMethod.getNameAsString().contains("initComponents")){
                        continue;
                    }
                    FanIn fo = new FanIn();
                    String auxPrimeraLinea = auxMethod.getDeclarationAsString(true, false, false) + " {";
                                               
                    this.log("inicia fan in de: " + auxPrimeraLinea);

                    fo.analizarLinea(auxPrimeraLinea);

                    for(Statement statement : auxMethod.getBody().get().getStatements()) {
                        String multilinea_linea = statement.toString();
                        for(String linea : multilinea_linea.split("\n")){
                            fo.analizarLinea(linea);
                        }
                    }

                    for(String methodsCalled : fo.getLista()) {
                        if(fadeIn.containsKey(methodsCalled)){
                            fadeIn.replace(methodsCalled, this.fadeIn.get(methodsCalled) + 1);
                        } else {
                            fadeIn.put(methodsCalled, 1);
                        }
                    }
                    this.log("termina fan in de: " + auxPrimeraLinea);
                }
                this.log("fan in calculado");
        }        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void log(String message){
        if(LOG_DEBUG){
            System.out.println(new Date().toString() + " - " + message);
        }        
    }
    
    private void doCodeStatistics(MethodDeclaration method){
        int inicio = method.getBegin().get().line;
        int fin = method.getEnd().get().line;
        int cuenta = fin - inicio;
        cuenta = cuenta + 1;
        lblCodeLines.setText(String.valueOf(cuenta));
                        
        int cantidadDeLineasComenadas = method.getBody().get().getAllContainedComments().size();               
        lblCodeLinescommenteds.setText(String.valueOf(cantidadDeLineasComenadas));
        
        double commentsperc = (Math.round((double)cantidadDeLineasComenadas * 100) / (double)cuenta);
        if(commentsperc > 0){
            DecimalFormat f = new DecimalFormat("##.00");
            lblCommentPerc.setText(f.format(commentsperc) + " %");
        } else {
            lblCommentPerc.setText("0.00 %");
        }
        
        ComplejidadCiclomatica cc = new ComplejidadCiclomatica();
        Halstead h = new Halstead();
        FanIn fi = new FanIn();
        
        String primeraLinea = method.getDeclarationAsString(true, false, false) + " {";
        
        c.setText("");
        c.append(primeraLinea + "\n");
            
        cc.analizarLinea(primeraLinea);
        h.analizarLinea(primeraLinea);
        fi.analizarLinea(primeraLinea);
        
        for(Statement statement : method.getBody().get().getStatements()) {
            String multilinea_linea = statement.toString();
            for(String linea : multilinea_linea.split("\n")){
                cc.analizarLinea(linea);
                h.analizarLinea(linea);                
                fi.analizarLinea(linea);
            }
            c.append(" " + multilinea_linea + "\n");
        }
        c.append("}");
        
        int complejidad = cc.getComplejidadTotal();
        lblComplejidad.setText(String.valueOf(complejidad ));
                
        int longitud = h.getLongitud();
        lblLongitud.setText(String.valueOf(longitud ));
        
        int volumen = h.getVolumen();
        lblVolumen.setText(String.valueOf(volumen ));
        
        String methodName = method.getNameAsString();
        int intFadeIn = 0;        
        if(fadeIn.containsKey(methodName))
            intFadeIn = fadeIn.get(methodName);
        lblFanIn.setText(String.valueOf(intFadeIn));
        
        int fadeOut = fi.getLista().size();
        lblFanOut.setText(String.valueOf(fadeOut));	
    }
    
    private void listMethodsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listMethodsValueChanged
        // TODO add your handling code here:
        if(listMethods.getSelectedIndex() > -1 && !methodElegido.equals(listMethods.getSelectedValue())){
            methodElegido = listMethods.getSelectedValue();
            System.out.println("Método elegido: " + methodElegido);
            
            MethodDeclaration method;
            method = methods.stream().filter(p -> p.getNameAsString().equals(listMethods.getSelectedValue())).collect(Collectors.toList()).get(0);

            doCodeStatistics(method);
        }
    }//GEN-LAST:event_listMethodsValueChanged

    private void JListClassesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JListClassesValueChanged
        if(JListClasses.getSelectedIndex() > -1 && !claseElegida.equals(JListClasses.getSelectedValue())) {
            claseElegida = JListClasses.getSelectedValue();
            System.out.println("Clase elegida: " + claseElegida);                     
            methods = parser.getMethods(FilePath + "\\" +  JListClasses.getSelectedValue());
            //Crear un objeto DefaultListModel
            DefaultListModel listModel = new DefaultListModel();
            //Recorrer el contenido del ArrayList
            for (int i = 0; i < methods.size(); i++) {                          
                if(methods.get(i).getNameAsString().contains("initComponents")){
                    continue;
                }
                //Añadir cada elemento del ArrayList en el modelo de la lista
                listModel.addElement(methods.get(i).getNameAsString());
            }
            //Asociar el modelo de lista al JList
            listMethods.setModel(listModel);
        }
    }//GEN-LAST:event_JListClassesValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JListClasses;
    private javax.swing.JTextArea c;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lblCodeLines;
    private javax.swing.JLabel lblCodeLinescommenteds;
    private javax.swing.JLabel lblCommentPerc;
    private javax.swing.JLabel lblComplejidad;
    private javax.swing.JLabel lblFanIn;
    private javax.swing.JLabel lblFanOut;
    private javax.swing.JLabel lblLongitud;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lblVolumen;
    private javax.swing.JList<String> listMethods;
    private javax.swing.JList<String> listMethods1;
    // End of variables declaration//GEN-END:variables
}
