/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grupo1.gestiontesting;

import com.github.javaparser.ast.body.MethodDeclaration;
import com.github.javaparser.ast.stmt.Statement;
import com.github.javaparser.symbolsolver.resolution.SymbolSolver;
import com.sun.xml.internal.ws.util.StringUtils;

import java.io.File;
import java.io.FilenameFilter;
import java.time.Clock;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author julian
 */
public class frmMain extends javax.swing.JFrame {

    private final Parser parser;
    private String FilePath;
    private List<MethodDeclaration> methods;    
    private List<MethodDeclaration> allMethods;


    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        parser = new Parser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        listMethods = new javax.swing.JList<String>();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMethods1 = new javax.swing.JList<String>();
        jScrollPane3 = new javax.swing.JScrollPane();
        c = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        JListClasses = new javax.swing.JList<String>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblCodeLines = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblCodeLinescommenteds = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblCommentPerc = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblComplejidad = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblLongitud = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblVolumen = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblFanOut = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblFanIn = new javax.swing.JLabel();

        jFileChooser1.setAccessory(jButton2);
        jFileChooser1.setDialogTitle("Seleccionar carpeta");
        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listMethods.setName("listMethods"); // NOI18N
        listMethods.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listMethodsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listMethods);

        jLabel1.setText("Ruta: <Seleccionar carpeta>");

        jButton2.setText("Buscar ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        listMethods1.setName("listMethods"); // NOI18N
        jScrollPane2.setViewportView(listMethods1);

        c.setColumns(20);
        c.setRows(5);
        jScrollPane3.setViewportView(c);

        jScrollPane4.setViewportView(jTextPane1);

        JListClasses.setName("listMethods"); // NOI18N
        JListClasses.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JListClassesValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(JListClasses);

        jLabel2.setText("Clases");

        jLabel3.setText("Métodos");

        jLabel4.setText("Código");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Lineas de código");

        lblCodeLines.setText("...");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Lineas de código comentadas");

        lblCodeLinescommenteds.setText("...");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Porcentaje de lineas comentadas");

        lblCommentPerc.setText("...");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Volumen");

        lblComplejidad.setText("...");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Complejidad ciclomática");

        lblLongitud.setText("...");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Longitud");

        lblVolumen.setText("...");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Fan-Out");

        lblFanOut.setText("...");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Fan-In");

        lblFanIn.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblCodeLinescommenteds)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(lblCodeLines)
                    .addComponent(jLabel6)
                    .addComponent(lblCommentPerc)
                    .addComponent(jLabel8)
                    .addComponent(lblComplejidad)
                    .addComponent(lblLongitud)
                    .addComponent(lblVolumen)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(lblFanOut)
                    .addComponent(jLabel12)
                    .addComponent(lblFanIn)
                    .addComponent(jLabel9))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addGap(7, 7, 7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCodeLines)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCodeLinescommenteds)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCommentPerc)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblComplejidad)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblLongitud)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblVolumen)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblFanOut)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblFanIn)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jFileChooser1.setDialogTitle("Elegir carpeta");
        jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        int result = jFileChooser1.showOpenDialog(this);
        
        if(result == JFileChooser.CANCEL_OPTION) {
                FilePath = "";
        } else if(result == JFileChooser.APPROVE_OPTION) {
                FilePath = jFileChooser1.getSelectedFile().getAbsolutePath();

                File directory = new File(FilePath);
                File[] fileArray = directory.listFiles(new FilenameFilter() {
                        @Override
                        public boolean accept(File dir, String name) {
                                return name.endsWith(".java");
                        }
                });

                List<File> fileList = Arrays.asList(fileArray);
        
                fileList.stream().forEach(fl -> System.out.println(fl.getName()));

                DefaultListModel listModel = new DefaultListModel();
                for(int i=0; i < fileArray.length; i++) {
                        String nombreArchivoJava = fileArray[i].getName();
                        listModel.add(i, nombreArchivoJava);
                }

                JListClasses.setModel(listModel);    
                
                allMethods = new ArrayList<MethodDeclaration>();
                for(int i = 0; i< JListClasses.getModel().getSize();i++){
                    allMethods.addAll(parser.getMethods(FilePath + "\\" +  JListClasses.getModel().getElementAt(i)));
                }
        }        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void doCodeStatistics(MethodDeclaration method){
        int inicio = method.getBegin().get().line;
        int fin = method.getEnd().get().line;
        int cuenta = fin - inicio;
        lblCodeLines.setText(String.valueOf(cuenta + 1));
                        
        int cantidadDeLineasComenadas = method.getBody().get().getAllContainedComments().size();               
        lblCodeLinescommenteds.setText(String.valueOf(cantidadDeLineasComenadas));
        
        double commentsperc = (cantidadDeLineasComenadas * 100) / cuenta;
        lblCommentPerc.setText(String.valueOf(commentsperc) + " %");
        
        ComplejidadCiclomatica cc = new ComplejidadCiclomatica();
        Halstead h = new Halstead();
        FanIn fi = new FanIn();
        
        String primeraLinea = method.getDeclarationAsString(true, false, false) + " {";
        
        cc.analizarLinea(primeraLinea);
        h.analizarLinea(primeraLinea);
        fi.analizarLinea(primeraLinea);
        
        for(Statement statement : method.getBody().get().getStatements())
        {
            String multilinea_linea = statement.toString();
            for(String linea : multilinea_linea.split("\n")){
                cc.analizarLinea(linea);
                h.analizarLinea(linea);                
                fi.analizarLinea(linea);
            }
        }
        
        int complejidad = cc.getComplejidadTotal();
        lblComplejidad.setText(String.valueOf(complejidad ));
                
        int longitud = h.getLongitud();
        lblLongitud.setText(String.valueOf(longitud ));
        
        int volumen = h.getVolumen();
        lblVolumen.setText(String.valueOf(volumen ));
        
        int fadeIn = 0;
        for(MethodDeclaration auxMethod : allMethods){
            if(!auxMethod.getNameAsString().equals(method.getNameAsString())){
                FanIn fo = new FanIn();
                String auxPrimeraLinea = auxMethod.getDeclarationAsString(true, false, false) + " {";
        
                fo.analizarLinea(auxPrimeraLinea);

                for(Statement statement : auxMethod.getBody().get().getStatements()) {
                    String multilinea_linea = statement.toString();
                    for(String linea : multilinea_linea.split("\n")){
                        fo.analizarLinea(linea);
                    }
                }
                
                for(String methodsCalled : fo.getLista()) {
                    if(methodsCalled.equals(method.getNameAsString())) {
                        fadeIn = fadeIn +1 ;
                    }
                }
            }
        }
        lblFanIn.setText(String.valueOf(fadeIn));
        
        int fadeOut = fi.getLista().size();
        lblFanOut.setText(String.valueOf(fadeOut));	
    }
    
    private void listMethodsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listMethodsValueChanged
        // TODO add your handling code here:
        MethodDeclaration method;
        method = methods.stream().filter(p -> p.getNameAsString().equals(listMethods.getSelectedValue())).collect(Collectors.toList()).get(0);
        
        c.setText("");
        c.append(method.getDeclarationAsString(true, false, false) + " {");
        c.append("\n");
        for(Statement statement : method.getBody().get().getStatements())
        {
            c.append(" " + statement.toString());
            c.append("\n");
        }
        c.append("}");
        
        doCodeStatistics(method);
    }//GEN-LAST:event_listMethodsValueChanged

    private void JListClassesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JListClassesValueChanged
                                            
        methods = parser.getMethods(FilePath + "\\" +  JListClasses.getSelectedValue());
        //Crear un objeto DefaultListModel
        DefaultListModel listModel = new DefaultListModel();
        //Recorrer el contenido del ArrayList
        for (int i = 0; i < methods.size(); i++) {
            //Añadir cada elemento del ArrayList en el modelo de la lista
            listModel.add(i, methods.get(i).getNameAsString());
        }
        //Asociar el modelo de lista al JList
        listMethods.setModel(listModel);
    }//GEN-LAST:event_JListClassesValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JListClasses;
    private javax.swing.JTextArea c;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lblCodeLines;
    private javax.swing.JLabel lblCodeLinescommenteds;
    private javax.swing.JLabel lblCommentPerc;
    private javax.swing.JLabel lblComplejidad;
    private javax.swing.JLabel lblFanIn;
    private javax.swing.JLabel lblFanOut;
    private javax.swing.JLabel lblLongitud;
    private javax.swing.JLabel lblVolumen;
    private javax.swing.JList<String> listMethods;
    private javax.swing.JList<String> listMethods1;
    // End of variables declaration//GEN-END:variables
}
